{"version":3,"sources":["constants.ts","styles.ts","App.tsx"],"names":["COLORS","ICONS","VOICE_OPTIONS","rate","pitch","CORRECT_TEXT","STYLES","StyleSheet","create","container","height","maxWidth","backgroundColor","header","north","alignItems","justifyContent","center","south","title","color","fontSize","fontStyle","paddingBottom","foundIt","textAlign","row","flexDirection","button","padding","borderRadius","buttonStandOut","box","flex","boxFade","opacity","box__icon","box__iconHidden","App","rowIndices","useMemo","Array","from","keys","colIndices","useState","slice","ROW_COUNT","colors","setColors","icons","setIcons","rightOne","setRightOne","fill","isOpen","setIsOpen","hasOpen","setHasOpen","done","setDone","talking","setTalking","correctText","setCorrectText","rightIcon","closeAll","useCallback","openAll","sayIt","text","timeout","Speech","setTimeout","clickBox","index","newOpen","sayTheRightOne","undefined","updateThings","colorSet","sort","Math","random","newIcons","newRightOne","getRandomInt","length","View","style","Text","TouchableOpacity","onPress","FontAwesome5","name","size","replaceAll","map","rn","cn","showFade","icon","open","click","IconBox","props","onClick","box__boxOpen","box__boxShut","defaultProps","max","floor"],"mappings":"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","file":"static/js/app.8c6c2bc1.chunk.js","sourcesContent":["\nexport const COLORS = [\n    'lightblue',\n    'lightgreen',\n    'orange',\n    'pink',\n    'silver',\n    'teal',\n    'violet',\n    'white',\n];\n\nexport const ICONS = [\n    'baby',\n    'bell',\n    'bone',\n    'broom',\n    'bus',\n    'bug',\n    'camera',\n    'campground',\n    'candy-cane',\n    'cat',\n    'cloud',\n    'coffee',\n    'dice',\n    'dragon',\n    'couch',\n    'crown',\n    'egg',\n    'fish',\n    'hippo',\n    'home',\n    'helicopter',\n    'heart',\n    'ice-cream',\n    'marker',\n    'mitten',\n    'moon',\n    'motorcycle',\n    'music',\n    'paw',\n    'piggy-bank',\n    'plane',\n    'ribbon',\n    'rocket',\n    'ship',\n    'sleigh',\n    'smile',\n    'socks',\n    'spider',\n    'star',\n    'sun',\n    'toolbox',\n    'tractor',\n    'tree',\n    'truck',\n    'water',\n    'snowflake',\n    'snowman',\n    'snowplow',\n];\n\nexport const APP_ICON = 'rocket';\nexport const ITEM_COUNT = 3;\nexport const ROW_COUNT = 2;\nexport const ACTION_TIMER = 1500;\nexport const VOICE_OPTIONS = { rate: 0.75, pitch: 2 };\nexport const CORRECT_TEXT = [\n    'Hurray!\\nYou found the ',\n    'Great!\\nYou found the ',\n    'Amazing!\\nYou found the ',\n    'Awesome!\\nYou found the ',\n    'Correct!\\nYou found the ',\n    'That\\'s it!\\nYou found the ',\n    'Way to go!\\nYou found the ',\n];","import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nexport const STYLES = StyleSheet.create({\n    container: {\n        // flex: 1,\n        height: '100%',\n        maxWidth: 500,\n        backgroundColor: '#333',\n    },\n    header: {\n        height: '5%',\n    },\n    north: {\n        height: '30%',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    center: {\n        height: '10%',\n    },\n    south: {\n        height: '55%',\n    },\n\n    title: {\n        color: 'white',\n        fontSize: 50,\n        fontStyle: 'italic',\n        paddingBottom: 20,\n    },\n\n    foundIt: {\n        color: 'white',\n        fontSize: 30,\n        fontStyle: 'italic',\n        textAlign: 'center',\n    },\n\n    row: {\n        flexDirection: 'row',\n        paddingBottom: 10,\n    },\n\n    button: {\n        backgroundColor: 'silver',\n        padding: 20,\n        borderRadius: 25,\n    },\n\n    buttonStandOut: {\n        backgroundColor: 'gold',\n        padding: 20,\n        borderRadius: 25,\n    },\n\n    box: {\n        flex: 1,\n        alignItems: 'center',\n    },\n    boxFade: {\n        flex: 1,\n        alignItems: 'center',\n        opacity: 0.3,\n    },\n    box__icon: {\n\n    },\n    box__iconHidden: {\n        opacity: 0,\n    }\n});","import React, { FC, useCallback, useState, useMemo } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport * as Speech from 'expo-speech';\n\nimport { ICONS, COLORS, VOICE_OPTIONS, ACTION_TIMER, CORRECT_TEXT, ITEM_COUNT, ROW_COUNT, APP_ICON } from './constants';\nimport { STYLES } from './styles';\n\nexport default function App() {\n  const totalCount = ROW_COUNT * ITEM_COUNT;\n  const rowIndices = useMemo(() => Array.from(Array(ROW_COUNT).keys()), [ROW_COUNT]);\n  const colIndices = useMemo(() => Array.from(Array(ITEM_COUNT).keys()), [ROW_COUNT]);\n\n  const [colors, setColors] = useState<string[]>([...COLORS].slice(0, totalCount));\n  const [icons, setIcons] = useState<string[]>([...ICONS].slice(0, totalCount));\n  const [rightOne, setRightOne] = useState<number>();\n  const [isOpen, setIsOpen] = useState<boolean[]>(Array(totalCount).fill(false));\n  const [hasOpen, setHasOpen] = useState<boolean>(false);\n  const [done, setDone] = useState<boolean>(false);\n  const [talking, setTalking] = useState<boolean>(false);\n  const [correctText, setCorrectText] = useState<string>(CORRECT_TEXT[0]);\n  const rightIcon = useMemo(() => icons[rightOne], [icons, rightOne]);\n\n  const closeAll = useCallback(() => {\n    setHasOpen(false);\n    setIsOpen(Array(totalCount).fill(false));\n  }, []);\n  const openAll = useCallback(() => {\n    setHasOpen(false);\n    setIsOpen(Array(totalCount).fill(true));\n  }, []);\n\n  const sayIt = useCallback((text: string, timeout = ACTION_TIMER) => {\n    if (talking) return;\n    setTalking(true);\n    Speech.speak(text, VOICE_OPTIONS)\n    setTimeout(() => setTalking(false), timeout);\n  }, [talking]);\n\n  const clickBox = useCallback((index: number) => {\n    if (done && !hasOpen) {\n      sayIt(icons[index], 1000);\n    }\n\n    if (hasOpen || done || talking) {\n      return;\n    }\n\n    const newOpen = [...isOpen];\n    newOpen[index] = !newOpen[index];\n    setIsOpen(newOpen);\n\n    setHasOpen(true);\n    if (index === rightOne) {\n      setDone(true);\n      sayIt(correctText + rightIcon);\n      setTimeout(openAll, ACTION_TIMER);\n    } else {\n      sayIt(icons[index], 1000);\n      setTimeout(closeAll, ACTION_TIMER);\n    }\n  }, [isOpen, hasOpen, closeAll, rightOne, done, talking, openAll, icons, correctText]);\n\n  const sayTheRightOne = useCallback(() => {\n    if (rightOne !== undefined) {\n      sayIt(icons[rightOne], 1000);\n    }\n  }, [icons, rightOne, talking]);\n\n  const updateThings = useCallback(() => {\n    if (hasOpen || talking) return;\n\n    const colorSet = [...COLORS].sort(() => (Math.random() > .5) ? 1 : -1);\n    setColors(colorSet.slice(0, totalCount));\n\n    const iconsSet = [...ICONS].sort(() => (Math.random() > .5) ? 1 : -1);\n    const newIcons = iconsSet.slice(0, totalCount);\n    setIcons(newIcons);\n\n    const newRightOne = getRandomInt(totalCount);\n    setRightOne(newRightOne);\n\n    setDone(false);\n    closeAll();\n\n    sayIt(\"Peek a \" + newIcons[newRightOne]);\n    setCorrectText(CORRECT_TEXT[getRandomInt(CORRECT_TEXT.length)]);\n  }, [closeAll, talking, hasOpen, sayTheRightOne]);\n\n  return (\n      <View style={STYLES.container}>\n        <View style={STYLES.header}>\n          {/*<Text>Testing Header</Text>*/}\n        </View>\n        <View style={STYLES.north}>\n          <Text style={STYLES.title}>\n            Peek - A -{' '}\n            <TouchableOpacity onPress={sayTheRightOne}>\n              <FontAwesome5 name={rightIcon ?? APP_ICON} size={50} color='white' />\n            </TouchableOpacity>\n          </Text>\n          <TouchableOpacity\n              onPress={updateThings}\n              style={done || !rightIcon ? STYLES.buttonStandOut : STYLES.button}\n          >\n            <Text>{rightIcon ? 'Mix It Up!' : 'Let\\'s Play!'}</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={STYLES.center}>\n          {done && (\n              <Text style={STYLES.foundIt}>\n                {correctText}{rightIcon.replaceAll('-', ' ')}.\n              </Text>\n          )}\n        </View>\n        <View style={STYLES.south}>\n          <>\n            {rightIcon !== undefined && rowIndices.map(rn => {\n              return (\n                  <View key={rn} style={STYLES.row}>\n                    {colIndices.map(cn => {\n                      const index = (rn * ITEM_COUNT) + cn;\n                      const color = colors[index];\n                      const showFade = done && index !== rightOne;\n                      return (\n                          <View key={index} style={showFade ? STYLES.boxFade : STYLES.box}>\n                            <IconBox\n                                icon={icons[index]}\n                                color={color}\n                                index={index}\n                                open={isOpen[index]}\n                                click={clickBox}\n                                size={100}\n                            />\n                          </View>\n                      )\n                    })}\n                  </View>\n              )\n            })}\n          </>\n        </View>\n      </View>\n  );\n}\n\ninterface IconBoxProps {\n  index: number;\n  size: number;\n  icon: string;\n  color: string;\n  open: boolean;\n  click: () => void;\n}\n\nconst IconBox: FC<IconBoxProps> = (props) => {\n  const { index, icon, open, size, color, click } = props;\n\n  const onClick = useCallback(() => {\n    click(index);\n  }, [click, index]);\n\n  return (\n      <>\n        <FontAwesome5 name={icon} size={size} color={color} style={open ? STYLES.box__icon : STYLES.box__iconHidden} />\n        {open && (\n            <TouchableOpacity onPress={onClick} style={STYLES.box__boxOpen}>\n              <FontAwesome5 name=\"box-open\" size={size} color={color} />\n            </TouchableOpacity>\n        )}\n        {!open && (\n            <TouchableOpacity onPress={onClick} style={STYLES.box__boxShut}>\n              <FontAwesome5 name=\"archive\" size={size} color={color} />\n            </TouchableOpacity>\n        )}\n      </>\n  )\n}\n\nIconBox.defaultProps = {\n  open: false,\n}\n\nconst getRandomInt = (max: number): number => {\n  return Math.floor(Math.random() * max);\n}\n"],"sourceRoot":""}